{
    "linear": {
        "alias": "Linear",
        "model_class": "LinearRegression",
        "module": "sklearn.linear_model",
        "default_params": {},
        "search_space": {
            "positive": {
                "_type": "Categorical",
                "categories": [
                    "False",
                    "True"
                ]
            }
        },
        "default_metric": "r2"
    },
    "ridge": {
        "alias": "Ridge",
        "model_class": "Ridge",
        "module": "sklearn.linear_model",
        "default_params": {
            "random_state": 1975
        },
        "search_space": {
            "alpha": {
                "_type": "Real",
                "low": 0.001,
                "high": 10.0,
                "prior": "log-uniform"
            }
        },
        "default_metric": "r2"
    },
    "lasso": {
        "alias": "Lasso",
        "model_class": "Lasso",
        "module": "sklearn.linear_model",
        "default_params": {
            "random_state": 1975,
            "max_iter": 2000
        },
        "search_space": {
            "alpha": {
                "_type": "Real",
                "low": 0.001,
                "high": 10.0,
                "prior": "log-uniform"
            }
        },
        "default_metric": "r2"
    },
    "elastic_net": {
        "alias": "ElasticNet",
        "model_class": "ElasticNet",
        "module": "sklearn.linear_model",
        "default_params": {
            "random_state": 1975,
            "max_iter": 2000
        },
        "search_space": {
            "alpha": {
                "_type": "Real",
                "low": 0.001,
                "high": 10.0,
                "prior": "log-uniform"
            },
            "l1_ratio": {
                "_type": "Real",
                "low": 0.0,
                "high": 1.0,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "svr": {
        "alias": "SVR",
        "model_class": "SVR",
        "module": "sklearn.svm",
        "default_params": {},
        "search_space": {
            "C": {
                "_type": "Real",
                "low": 0.1,
                "high": 100.0,
                "prior": "log-uniform"
            },
            "gamma": {
                "_type": "Real",
                "low": 0.0001,
                "high": 0.1,
                "prior": "log-uniform"
            },
            "kernel": {
                "_type": "Categorical",
                "categories": [
                    "rbf",
                    "linear",
                    "poly"
                ]
            }
        },
        "default_metric": "r2"
    },
    "knn": {
        "alias": "KNN",
        "model_class": "KNeighborsRegressor",
        "module": "sklearn.neighbors",
        "default_params": {
            "n_jobs": -1
        },
        "search_space": {
            "n_neighbors": {
                "_type": "Integer",
                "low": 3,
                "high": 20,
                "prior": "uniform"
            },
            "weights": {
                "_type": "Categorical",
                "categories": [
                    "uniform",
                    "distance"
                ]
            }
        },
        "default_metric": "r2"
    },
    "decision_tree": {
        "alias": "DecisionTree",
        "model_class": "DecisionTreeRegressor",
        "module": "sklearn.tree",
        "default_params": {
            "random_state": 1975
        },
        "search_space": {
            "max_depth": {
                "_type": "Integer",
                "low": 3,
                "high": 20,
                "prior": "uniform"
            },
            "min_samples_split": {
                "_type": "Integer",
                "low": 2,
                "high": 20,
                "prior": "uniform"
            },
            "min_samples_leaf": {
                "_type": "Integer",
                "low": 1,
                "high": 10,
                "prior": "uniform"
            },
            "max_features": {
                "_type": "Categorical",
                "categories": [
                    "sqrt",
                    "log2"
                ]
            }
        },
        "default_metric": "r2"
    },
    "random_forest": {
        "alias": "RandomForest",
        "model_class": "RandomForestRegressor",
        "module": "sklearn.ensemble",
        "default_params": {
            "random_state": 1975,
            "n_jobs": -1
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 50,
                "high": 300,
                "prior": "uniform"
            },
            "max_depth": {
                "_type": "Integer",
                "low": 5,
                "high": 20,
                "prior": "uniform"
            },
            "min_samples_split": {
                "_type": "Integer",
                "low": 2,
                "high": 10,
                "prior": "uniform"
            },
            "min_samples_leaf": {
                "_type": "Integer",
                "low": 1,
                "high": 5,
                "prior": "uniform"
            },
            "max_features": {
                "_type": "Categorical",
                "categories": [
                    "sqrt",
                    "log2"
                ]
            }
        },
        "default_metric": "r2"
    },
    "ada_boost": {
        "alias": "AdaBoost",
        "model_class": "AdaBoostRegressor",
        "module": "sklearn.ensemble",
        "default_params": {
            "random_state": 1975
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 50,
                "high": 200,
                "prior": "uniform"
            },
            "learning_rate": {
                "_type": "Real",
                "low": 0.01,
                "high": 2.0,
                "prior": "log-uniform"
            },
            "loss": {
                "_type": "Categorical",
                "categories": [
                    "linear",
                    "square",
                    "exponential"
                ]
            }
        },
        "default_metric": "r2"
    },
    "gradient_boosting": {
        "alias": "GradientBoost",
        "model_class": "GradientBoostingRegressor",
        "module": "sklearn.ensemble",
        "default_params": {
            "random_state": 1975
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 50,
                "high": 200,
                "prior": "uniform"
            },
            "max_depth": {
                "_type": "Integer",
                "low": 3,
                "high": 10,
                "prior": "uniform"
            },
            "learning_rate": {
                "_type": "Real",
                "low": 0.01,
                "high": 0.3,
                "prior": "log-uniform"
            },
            "subsample": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "bagging": {
        "alias": "Bagging",
        "model_class": "BaggingRegressor",
        "module": "sklearn.ensemble",
        "default_params": {
            "random_state": 1975,
            "n_jobs": -1
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 10,
                "high": 100,
                "prior": "uniform"
            },
            "max_samples": {
                "_type": "Real",
                "low": 0.5,
                "high": 1.0,
                "prior": "uniform"
            },
            "max_features": {
                "_type": "Real",
                "low": 0.5,
                "high": 1.0,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "extra_trees": {
        "alias": "ExtraTrees",
        "model_class": "ExtraTreesRegressor",
        "module": "sklearn.ensemble",
        "default_params": {
            "random_state": 1975,
            "n_jobs": -1
        },
        "search_space": {
            "max_depth": {
                "_type": "Integer",
                "low": 5,
                "high": 20,
                "prior": "uniform"
            },
            "min_samples_split": {
                "_type": "Integer",
                "low": 2,
                "high": 10,
                "prior": "uniform"
            },
            "min_samples_leaf": {
                "_type": "Integer",
                "low": 1,
                "high": 5,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "lightgbm": {
        "alias": "LightGBM",
        "model_class": "LGBMRegressor",
        "module": "lightgbm",
        "default_params": {
            "random_state": 1975,
            "verbose": -1
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 50,
                "high": 300,
                "prior": "uniform"
            },
            "max_depth": {
                "_type": "Integer",
                "low": 3,
                "high": 10,
                "prior": "uniform"
            },
            "learning_rate": {
                "_type": "Real",
                "low": 0.01,
                "high": 0.3,
                "prior": "log-uniform"
            },
            "subsample": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            },
            "colsample_bytree": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            },
            "num_leaves": {
                "_type": "Integer",
                "low": 20,
                "high": 150,
                "prior": "uniform"
            },
            "min_child_samples": {
                "_type": "Integer",
                "low": 5,
                "high": 100,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "xgboost": {
        "alias": "XGBoost",
        "model_class": "XGBRegressor",
        "module": "xgboost",
        "default_params": {
            "random_state": 1975,
            "verbosity": 0
        },
        "search_space": {
            "n_estimators": {
                "_type": "Integer",
                "low": 50,
                "high": 300,
                "prior": "uniform"
            },
            "max_depth": {
                "_type": "Integer",
                "low": 3,
                "high": 10,
                "prior": "uniform"
            },
            "learning_rate": {
                "_type": "Real",
                "low": 0.01,
                "high": 0.3,
                "prior": "log-uniform"
            },
            "subsample": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            },
            "colsample_bytree": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "catboost": {
        "alias": "CatBoost",
        "model_class": "CatBoostRegressor",
        "module": "catboost",
        "default_params": {
            "random_seed": 1975,
            "verbose": 0,
            "allow_writing_files": false
        },
        "search_space": {
            "iterations": {
                "_type": "Integer",
                "low": 50,
                "high": 300,
                "prior": "uniform"
            },
            "depth": {
                "_type": "Integer",
                "low": 3,
                "high": 10,
                "prior": "uniform"
            },
            "learning_rate": {
                "_type": "Real",
                "low": 0.01,
                "high": 0.3,
                "prior": "log-uniform"
            },
            "subsample": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            },
            "colsample_bylevel": {
                "_type": "Real",
                "low": 0.6,
                "high": 1.0,
                "prior": "uniform"
            },
            "l2_leaf_reg": {
                "_type": "Real",
                "low": 1.0,
                "high": 10.0,
                "prior": "uniform"
            }
        },
        "default_metric": "r2"
    },
    "mlp": {
        "alias": "MLP",
        "model_class": "MLPRegressor",
        "module": "sklearn.neural_network",
        "default_params": {
            "random_state": 1975,
            "max_iter": 1000,
            "early_stopping": true,
            "n_iter_no_change": 10,
            "tol": 0.0001,
            "solver": "adam",
            "learning_rate_init": 0.001,
            "batch_size": "auto"
        },
        "search_space": {
            "hidden_layer_sizes": {
                "_type": "Categorical",
                "categories": [
                    16,
                    32,
                    64,
                    128,
                    256,
                    512
                ]
            },
            "activation": {
                "_type": "Categorical",
                "categories": [
                    "relu",
                    "tanh",
                    "logistic"
                ]
            },
            "alpha": {
                "_type": "Real",
                "low": 1e-05,
                "high": 1.0,
                "prior": "log-uniform"
            },
            "learning_rate": {
                "_type": "Categorical",
                "categories": [
                    "constant",
                    "adaptive",
                    "invscaling"
                ]
            }
        },
        "default_metric": "r2"
    }
}